type Query {
    users(query: String, 
          first: Int, 
          skip: Int, 
          after: String,
          orderBy: UserOrderByInput): [User!]!
    me: User!
}

type Mutation {
    signIn(data: SignInUserInput!): AuthPayload!
    signUp(data: SignUpUserInput!): AuthPayload!
    deleteUser: User!
    updateUser(data: UpdateUserInput!): User!
}

type User {
    id: ID!
    name: String!
    email: String
    comments: [Comment!]!
    posts: [Post!]!
    updatedAt: String!
    createdAt: String!
}

type AuthPayload {
    token: String!
    user: User!
}

input SignUpUserInput {
    name: String!
    password: String!
    email: String!
}

input SignInUserInput {
    email: String!
    password: String!
}

input UpdateUserInput {
    name: String
    password: String
    email: String
}